












		$(CC) $(CFLAGS) $(OBJS) $(LIBFT) $(LDFLAGS) -o $(NAME); \
		$(CC) -v $(CFLAGS) $(OBJS) $(LIBFT) -L$(shell brew --prefix readline)/lib $(LDFLAGS) -o $(NAME); \
	$(CC) $(CFLAGS) -c $< -o $@
	@echo "Creating $(NAME)"
	@echo "Creating archive $(LIBFT)"
	@if [ "$(shell uname)" = "Darwin" ]; then \
	CFLAGS = -Wall -Wextra -Werror -I$(INCL_DIR)
	CFLAGS = -Wall -Wextra -Werror -I$(INCL_DIR) -I$(shell brew --prefix readline)/include
	else \
	fi
	make -C $(LIBFT_DIR)
	make -C $(LIBFT_DIR) fclean
	mkdir -p $(OBJS_DIR)
	rm -rf $(NAME)
	rm -rf $(OBJS)
	rm -rf $(OBJS_DIR)
# OBJS = $(patsubst $(SRCS_DIR)/%.c, $(OBJS_DIR)/%.o, $(SRCS))
$(LIBFT):
$(NAME): $(OBJS) $(LIBFT)
$(OBJS_DIR)/%.o: $(SRCS_DIR)/%.c
$(OBJS_DIR):
CC = gcc
INCL_DIR = ./includes
LDFLAGS = -lreadline 
LIBFT = $(LIBFT_DIR)/libft.a
LIBFT_DIR = ./libft
LIBFT_H = 
NAME = minishell
OBJS = $(SRCS:.c=.o)
OBJS_DIR = ./objs
SRCS += $(wildcard $(SRCS_DIR)/*.c) $(wildcard $(SRCS_DIR)/builtin/*.c) 
SRCS_DIR = ./srcs
all: $(OBJS_DIR) $(NAME)
clean:
else
endif
fclean: clean
ifeq ($(shell uname -s), Darwin)
re: fclean all
